services:

  development-database:
    image: postgres:15.1
    restart: always
    env_file:
      - ./env/development-database.env
    environment:
      - POSTGRES_DB=${USER_NAME}
      - POSTGRES_USER=${USER_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    ports:
      - "5432:5432/tcp"
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ./database-files:/var/lib/postgresql/data:rw

  development-application:
    command: npm run dev
    depends_on:
      development-database:
        condition: service_healthy
    env_file:
      - ./env/development-application.env
    environment:
      - NEXT_TELEMETRY_DISABLED=1
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000/api/health-check || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s
    image: node:18.12.1
    ports:
      - "3000:3000/tcp"
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./source:/app:rw
    working_dir: /app

  npm:
    entrypoint: npm
    image: node:18.12.1
    stdin_open: true
    tty: true
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./source:/app:rw
    working_dir: /app
