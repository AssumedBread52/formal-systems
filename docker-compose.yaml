services:

  database:
    env_file:
      - ./database/credentials.env
    healthcheck:
      test: ["CMD-SHELL", "mongosh localhost:27017/test --quiet --eval='db.runCommand(\"ping\").ok' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    image: mongo:6.0.5
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./database/data:/data/db:rw
      - ./database/initialization-scripts:/docker-entrypoint-initdb.d:ro

  back-end:
    command: npm run start:dev
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/app/status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    image: node:20.2.0
    ports:
      - "5000:5000/tcp"
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./back-end:/app:rw
    working_dir: /app

  front-end:
    command: npm run dev
    depends_on:
      back-end:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000/api/app/status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    image: node:20.2.0
    ports:
      - "3000:3000/tcp"
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./front-end:/app:rw
    working_dir: /app

  npm-back-end:
    entrypoint: npm
    image: node:20.2.0
    stdin_open: true
    tty: true
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./back-end:/app:rw
    working_dir: /app

  npm-front-end:
    entrypoint: npm
    image: node:20.2.0
    stdin_open: true
    tty: true
    user: "${USER_ID}:${GROUP_ID}"
    volumes:
      - ./front-end:/app:rw
    working_dir: /app
